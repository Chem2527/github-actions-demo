name: Deploy to EC2

# Trigger the workflow on push or manually
on:
  push:
    branches:
      - main  # or your default branch
  workflow_dispatch:  # Allow manual trigger from GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest  # or windows-latest depending on your runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0'  # Specify your target .NET version here

      - name: Restore dependencies
        run: |
          cd DummyDotNetApp  # Change directory to where the .csproj file is
          dotnet restore

      - name: Build the project
        run: |
          cd DummyDotNetApp  # Ensure you're in the correct directory
          dotnet build --configuration Release  # Build the project in Release mode

      - name: Publish the project
        run: |
          cd DummyDotNetApp  # Ensure you're in the correct directory
          dotnet publish --configuration Release --output ./publish  # Publish the app

      - name: Deploy to EC2 server via SSH
        run: |
          echo "Starting SSH deployment..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa administrator@*** "
            powershell -NoProfile -Command ^
              # Create destination folder if it doesn't exist
              New-Item -Path 'C:\\inetpub\\wwwroot\\DummyDotNetApp' -ItemType Directory -Force; ^

              # Copy published files to the IIS folder
              Write-Host 'Copying files to the IIS folder...'; ^ 
              Copy-Item -Path 'D:\\a\\github-actions-demo\\github-actions-demo\\DummyDotNetApp\\publish\\*' -Destination 'C:\\inetpub\\wwwroot\\DummyDotNetApp' -Recurse -Force; ^

              # Verify files are copied
              Write-Host 'Verifying copied files in IIS folder...'; ^ 
              Get-ChildItem -Path 'C:\\inetpub\\wwwroot\\DummyDotNetApp'; ^

              # Reset IIS to apply changes
              Write-Host 'Resetting IIS...'; ^ 
              iisreset; ^ 
          "
          shell: C:\Program Files\PowerShell\7\pwsh.EXE -command ". '{0}'"
        env:
          DOTNET_ROOT: C:\Program Files\dotnet
