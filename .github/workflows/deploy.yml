name: Deploy .NET Application to Windows EC2

on:
  push:
    branches:
      - main  # Adjust the branch as necessary

jobs:
  deploy:
    runs-on: windows-latest  # This uses a GitHub-hosted Windows runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'  # Replace with your target .NET version

      - name: Publish .NET Application
        run: |
          cd DummyDotNetApp  # Navigate to the project directory
          dotnet restore DummyDotNetApp.csproj
          dotnet publish DummyDotNetApp.csproj -c Release -o ./publish  # Publish to ./publish directory

      - name: Set up SSH key for connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Windows EC2 via SSH (PowerShell)
        run: |
          echo "Starting SSH deployment..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa administrator@${{ secrets.EC2_PUBLIC_IP }} "
            powershell -NoProfile -Command ^
              # Create destination folder if it doesn't exist
              New-Item -Path 'C:\\inetpub\\wwwroot\\DummyDotNetApp' -ItemType Directory -Force; ^
              # Copy published files to the IIS folder
              Copy-Item -Path '${{ github.workspace }}\\DummyDotNetApp\\publish\\*' -Destination 'C:\\inetpub\\wwwroot\\DummyDotNetApp' -Recurse -Force; ^
              # Reset IIS to apply changes
              iisreset; ^
            "
        shell: pwsh
        env:
          DOTNET_ROOT: C:\Program Files\dotnet
