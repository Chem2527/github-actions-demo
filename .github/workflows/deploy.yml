name: Deploy .NET Application to Windows EC2 with IIS

on:
  push:
    branches:
      - main  # Adjust the branch as necessary

jobs:
  build:
    runs-on: windows-latest  # This uses a GitHub-hosted Windows runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'  # Replace with your target .NET version

      - name: Publish .NET Application
        run: |
          # Ensure the project directory exists
          if (!(Test-Path -Path './DummyDotNetApp')) {
            Write-Host "Error: 'DummyDotNetApp' directory does not exist."
            exit 1
          }
          cd DummyDotNetApp  # Navigate to the project directory
          dotnet restore DummyDotNetApp.csproj
          dotnet publish DummyDotNetApp.csproj -c Release -o ./publish  # Publish to ./publish directory

      - name: Upload published files to artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-app-artifact
          path: ./DummyDotNetApp/publish

  deploy:
    runs-on: windows-latest  # This uses a GitHub-hosted Windows runner
    needs: build  # This makes sure the 'build' job completes first

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: dotnet-app-artifact

      - name: List files in the downloaded artifact directory
        run: |
          echo "Listing contents of downloaded artifact folder..."
          dir ${{ github.workspace }}
        shell: pwsh

      - name: Set up SSH key for connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Ensure target directory exists on EC2 (Windows)
        run: |
          echo "Ensuring that the target directory exists on EC2..."
          ssh -i ~/.ssh/id_rsa administrator@${{ secrets.EC2_PUBLIC_IP }} "
            powershell -Command \"
            if (!(Test-Path 'C:\\publish')) {
              New-Item -Path 'C:\\publish' -ItemType Directory;
            }
            \"
          "
        shell: pwsh

      - name: Upload published files to EC2 via SCP
        run: |
          echo "Starting SCP transfer of published files..."
          # Explicitly use the full Windows path (double backslashes) for SCP
          scp -i ~/.ssh/id_rsa -r "${{ github.workspace }}\\*" administrator@${{ secrets.EC2_PUBLIC_IP }}:C:\\publish
        shell: pwsh

      - name: Deploy to Windows EC2 via SSH
        run: |
          echo "Starting SSH deployment..."
          ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa administrator@${{ secrets.EC2_PUBLIC_IP }} "
            powershell -NoProfile -Command \"
            # Ensure destination folder in IIS exists
            if (!(Test-Path 'C:\\inetpub\\wwwroot\\DummyDotNetApp')) {
              New-Item -Path 'C:\\inetpub\\wwwroot\\DummyDotNetApp' -ItemType Directory;
            }
            # Copy files from publish folder to IIS directory
            Copy-Item -Path 'C:\\publish\\*' -Destination 'C:\\inetpub\\wwwroot\\DummyDotNetApp' -Recurse -Force;
            # Reset IIS to apply changes
            iisreset;
            \"
          "
        shell: pwsh
